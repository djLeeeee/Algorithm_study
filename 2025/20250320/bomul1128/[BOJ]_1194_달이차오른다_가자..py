# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/1194
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=1194&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
def main():
    n, m = map(int, input().split())
    board = [input() for _ in range(n)]
    ix = iy = 0
    for x in range(n):
        for y in range(m):
            if board[x][y] == '0':
                ix, iy = x, y
                break
    dist = [[[-1] * (1 << 6) for _ in range(m)] for _ in range(n)]
    dist[ix][iy][0] = 0
    q = [(ix, iy, 0)]
    dx = [0, 0, 1, -1]
    dy = [1, -1, 0, 0]
    for x, y, bits in q:
        for d in range(4):
            nx = x + dx[d]
            ny = y + dy[d]
            if nx < 0 or nx >= n or ny < 0 or ny >= m:
                continue
            c = board[nx][ny]
            nbits = bits
            if c == "#":
                continue
            elif "a" <= c <= "f":
                nbits |= 1 << (ord(c) - ord("a"))
            elif "A" <= c <= "F" and not (bits & 1 << (ord(c) - ord("A"))):
                continue
            elif c == "1":
                return dist[x][y][bits] + 1
            if dist[nx][ny][nbits] == -1:
                dist[nx][ny][nbits] = dist[x][y][bits] + 1
                q.append((nx, ny, nbits))
    return -1


if __name__ == '__main__':
    print(main())
