# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/20007
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=20007&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin
import heapq

input = stdin.readline
INF = float('inf')


def dijkstra(start):
    dist = [INF] * n
    dist[start] = 0
    hq = [(0, start)]
    while hq:
        cost, idx = heapq.heappop(hq)
        if dist[idx] < cost:
            continue
        for adj, ext in graph[idx]:
            if dist[adj] > cost + ext:
                dist[adj] = cost + ext
                heapq.heappush(hq, (dist[adj], adj))
    return dist


n, m, x, y = map(int, input().split())
graph = [[] for _ in range(n)]
for _ in range(m):
    a, b, d = map(int, input().split())
    graph[a].append((b, d))
    graph[b].append((a, d))
distance = dijkstra(y)
distance.sort()
ans = 0
stack = 0
for d in distance:
    if 2 * d > x:
        print(-1)
        exit()
    stack += 2 * d
    if stack > x:
        ans += 1
        stack = 2 * d
if stack > 0:
    ans += 1
print(ans)
