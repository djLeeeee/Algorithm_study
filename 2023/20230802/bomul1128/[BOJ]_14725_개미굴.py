# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/14725
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=14725&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin
from collections import deque, defaultdict

input = stdin.readline


def sol(edges, depth):
    if not edges[0]:
        return []
    children = defaultdict(list)
    for edge in edges:
        x = edge.popleft()
        children[x].append(edge)
    ans = []
    for node in sorted(children):
        ans += [(node, depth)] + sol(children[node], depth + 1)
    return ans


n = int(input())
tree = []
for _ in range(n):
    _, *path = input().strip().split()
    tree.append(deque(path))
tree.sort()
result = sol(tree, 0)
for value, d in result:
    print('--' * d + value)
