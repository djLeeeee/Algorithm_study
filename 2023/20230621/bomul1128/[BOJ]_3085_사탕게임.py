# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/3085
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=3085&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
n = int(input())
board = [input() for _ in range(n)]
ans = 0
for _ in range(2):
    for c in "CPZY":
        for i in range(n):
            intervals = []
            p = 0
            h = -1
            while p < n:
                if board[i][p] == c:
                    if h == -1:
                        h = p
                elif h != -1:
                    intervals.append((h, p - 1))
                    ans = max(ans, p - h)
                    h = -1
                p += 1
            if h != -1:
                intervals.append((h, n - 1))
                ans = max(ans, n - h)
            for j in range(len(intervals)):
                x3, x4 = intervals[j]
                if i - 1 >= 0:
                    if x3 - 1 >= 0 and board[i - 1][x3 - 1] == c:
                        ans = max(ans, x4 - x3 + 2)
                    if x4 + 1 < n and board[i - 1][x4 + 1] == c:
                        ans = max(ans, x4 - x3 + 2)
                if i + 1 < n:
                    if x3 - 1 >= 0 and board[i + 1][x3 - 1] == c:
                        ans = max(ans, x4 - x3 + 2)
                    if x4 + 1 < n and board[i + 1][x4 + 1] == c:
                        ans = max(ans, x4 - x3 + 2)
                if j > 0:
                    x1, x2 = intervals[j - 1]
                    if x2 + 2 == x3:
                        ans = max(ans, x2 - x1 + 2, x4 - x3 + 2)
                        x5 = x2 + 1
                        if 0 <= i - 1 and board[i - 1][x5] == c:
                            ans = max(ans, x4 - x1 + 1)
                        if i + 1 < n and board[i + 1][x5] == c: 
                            ans = max(ans, x4 - x1 + 1)
    board = list(map(list, zip(*board[::-1])))
print(ans)
