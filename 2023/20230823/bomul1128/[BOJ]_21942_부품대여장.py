# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/21942
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=21942&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin

input = stdin.readline


calendar = [
    0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31
]


def toMin(month, day, hour, minute):
    for i in range(1, month):
        day += calendar[i]
    day -= 1
    return day * 24 * 60 + hour * 60 + minute


n, dhm, f = input().rstrip().split()
n = int(n)
d, hm = dhm.split("/")
d= int(d)
h, m = map(int, hm.split(":"))
f = int(f)
memo = {}
fee = {}
limit = toMin(0, d + 1, h, m)
for _ in range(n):
    ymd, hm, c, name = input().rstrip().split()
    _, m, d = map(int, ymd.split("-"))
    now = toMin(m, d, *map(int, hm.split(":")))
    if (t := memo.get((name, c))) is None:
        memo[(name, c)] = now
    else:
        if now - t > limit:
            fee[name] = fee.get(name, 0) + f * (now - t - limit)
        del memo[(name, c)]
if not fee:
    print(-1)
else:
    keys = sorted(fee.keys())
    for key in keys:
        print(key, fee[key])
