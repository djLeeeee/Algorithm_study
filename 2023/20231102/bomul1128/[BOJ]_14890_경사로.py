# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/14890
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=14890&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin


def check_road_1way(road, L, reversed = False):
    result = 0.5
    put = [] 
    if reversed:
        road = road[::-1]
    height = road[0]
    n = 1
    for k in range(1, len(road)):
        if abs(road[k] - height) > 1:
            result = 0
            break
        elif road[k] == height:
            n += 1
        elif road[k] - height == 1:
            if n < L:
                result = 0
                break
            if reversed:
                put += [len(road) - k + i for i in range(L)]
            else:
                put += [k - i  - 1 for i in range(L)]
            height = road[k]
            n = 1
        else:
            height = road[k]
            n = 1
    return result, put


def check_road(road, L):
    x = check_road_1way(road, L)
    y = check_road_1way(road, L, reversed = True)
    for i in x[1]:
        if i in y[1]:
            return 0
    return int(x[0] + y[0])


n, l = map(int, stdin.readline().split())
r1 = [[] for _ in range(n)]
r2 = [[] for _ in range(n)]
for i in range(n):
    x = list(map(int, stdin.readline().split()))
    r1[i] = x
    for j in range(n):
        r2[j].append(x[j])
result = 0
for road in r1 + r2:
    result += check_road(road, l)
print(result)
