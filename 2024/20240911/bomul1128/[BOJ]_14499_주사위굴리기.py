# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/14499
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=14499&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
class Dice:
    def __init__(
        self,
        top=0,
        bottom=0,
        left=0,
        right=0,
        front=0,
        back=0,
    ):
        self.top = top
        self.bottom = bottom
        self.left = left
        self.right = right
        self.front = front
        self.back = back

    def roll(self, direction: int):
        # 1: east, 2: west, 3: north, 4: south
        if direction == 1:
            self.top, self.bottom, self.left, self.right = (
                self.left,
                self.right,
                self.bottom,
                self.top,
            )
        elif direction == 2:
            self.top, self.bottom, self.left, self.right = (
                self.right,
                self.left,
                self.top,
                self.bottom,
            )
        elif direction == 3:
            self.top, self.bottom, self.front, self.back = (
                self.front,
                self.back,
                self.bottom,
                self.top,
            )
        elif direction == 4:
            self.top, self.bottom, self.front, self.back = (
                self.back,
                self.front,
                self.top,
                self.bottom,
            )


n, m, x, y, _ = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]
order = list(map(int, input().split()))
dx = [0, 0, 0, -1, 1]
dy = [0, 1, -1, 0, 0]

dice = Dice()
for d in order:
    nx, ny = x + dx[d], y + dy[d]
    if 0 <= nx < n and 0 <= ny < m:
        dice.roll(d)
        if board[nx][ny] == 0:
            board[nx][ny] = dice.bottom
        else:
            dice.bottom = board[nx][ny]
            board[nx][ny] = 0
        x, y = nx, ny
        print(dice.top)
