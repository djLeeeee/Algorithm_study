# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/4386
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=4386&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin, setrecursionlimit
import heapq

setrecursionlimit(10 ** 6)
input = stdin.readline


def get_dist(p1, p2):
    result = (p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2
    return result ** 0.5


def find(t):
    if t == p[t]:
        return t
    p[t] = find(p[t])
    return p[t]


n = int(input())
p = list(range(n))
point = []
dist = []
for _ in range(n):
    x, y = map(float, input().split())
    point.append((x, y))
for i in range(n - 1):
    for j in range(i + 1, n):
        dist.append((get_dist(point[i], point[j]), i, j))
heapq.heapify(dist)
edge = 0
ans = 0
while edge < n - 1:
    d, xx, yy = heapq.heappop(dist)
    fx = find(xx)
    fy = find(yy)
    if fx != fy:
        ans += d
        p[fx] = fy
        edge += 1
print('{:.2f}'.format(ans))
