# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/16973
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=16973&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin

input = stdin.readline


def check(a, b, c, d):
    return (pfx_sum[c][d] - pfx_sum[c][b - 1] - pfx_sum[a - 1][d] + pfx_sum[a - 1][b - 1]) == 0


n, m = map(int, input().split())
board = [list(map(int, input().split())) for _ in range(n)]
h, w, sx, sy, fx, fy = map(int, input().split())
pfx_sum = [[0] * (m + 1) for _ in range(n + 1)]
for i in range(1, n + 1):
    for j in range(1, m + 1):
        pfx_sum[i][j] = board[i - 1][j - 1] + pfx_sum[i - 1][j] + pfx_sum[i][j - 1] - pfx_sum[i - 1][j - 1]
ans = -1
que = [(sx, sy, 0)]
dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]
visited = [[False] * (m + 1) for _ in range(n + 1)]
visited[sx][sy] = True
for x, y, t in que:
    if x == fx and y == fy:
        ans = t
        break
    for d in range(4):
        nx = x + dx[d]
        ny = y + dy[d]
        if 1 <= nx and nx + h - 1 <= n and 1 <= ny and ny + w - 1 <= m and not visited[nx][ny]:
            if check(nx, ny, nx + h - 1, ny + w - 1):
                que.append((nx, ny, t + 1))
                visited[nx][ny] = True
print(ans)
