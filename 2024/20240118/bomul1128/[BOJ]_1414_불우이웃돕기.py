# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/1414
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=1414&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
def find(idx):
    if parent[idx] == idx:
        return idx
    parent[idx] = find(parent[idx])
    return parent[idx]

n = int(input())
board = [input() for _ in range(n)]
parent = list(range(n))
edges = []
got = 0
for i in range(n):
    for j in range(n):
        t = board[i][j]
        if 'a' <= t <= 'z':
            k = ord(t) - ord('a') + 1
            edges.append((k, i, j))
            got += k
        elif 'A' <= t <= 'Z':
            k = ord(t) - ord('A') + 27
            edges.append((k, i, j))
            got += k
edges.sort()
ans = 0
component = n
for w, x, y in edges:
    if component == 1:
        break
    if find(x) != find(y):
        parent[find(x)] = find(y)
        component -= 1
        ans += w
if component == 1:
    print(got - ans)
else:
    print(-1)
