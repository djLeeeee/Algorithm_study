# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/2665
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=2665&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin
from heapq import heappush, heappop

input = stdin.readline

n = int(input())
INF = float('inf')
dx = [1, -1, 0, 0]
dy = [0, 0, 1, -1]
labyrinth = []
for i in range(n):
    labyrinth.append(list(map(int, input().rstrip())))
d = [[INF] * n for _ in range(n)]
d[0][0] = 0
heap = []
heappush(heap, (0, 0, 0))
while heap:
    cost, x, y = heappop(heap)
    if cost > d[x][y]:
        continue
    for j in range(4):
        nx = x + dx[j]
        ny = y + dy[j]
        if 0 <= nx < n and 0 <= ny < n and d[nx][ny] > cost + 1 - labyrinth[nx][ny]:
            d[nx][ny] = cost + 1 - labyrinth[nx][ny]
            heappush(heap, (d[nx][ny], nx, ny))
print(d[-1][-1])
