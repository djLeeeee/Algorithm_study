# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/17779
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=17779&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
def sol(x, y, d1, d2):
    region = [[0] * (n + 1) for _ in range(n + 1)]
    tot = [0] * 5
    mx, my = x, y
    for _ in range(d1 + 1):
        for dy in range(d2 + 1):
            if not region[mx + dy][my + dy]:
                region[mx + dy][my + dy] = 5
                tot[4] += board[mx + dy][my + dy]
        mx += 1
        my -= 1
    mx, my = x, y
    mx += 1
    for _ in range(d1):
        for dy in range(d2):
            if not region[mx + dy][my + dy]:
                region[mx + dy][my + dy] = 5
                tot[4] += board[mx + dy][my + dy]
        mx += 1
        my -= 1
    for r in range(1, n + 1):
        for c in range(1, n + 1):
            if not region[r][c]:
                if 1 <= r < x + d1 and 1 <= c <= y:
                    region[r][c] = 1
                    tot[0] += board[r][c]
                elif 1 <= r <= x + d2 and y < c <= n:
                    region[r][c] = 2
                    tot[1] += board[r][c]
                elif x + d1 <= r <= n and 1 <= c < y - d1 + d2:
                    region[r][c] = 3
                    tot[2] += board[r][c]
                elif x + d2 < r <= n and y - d1 + d2 <= c <= n:
                    region[r][c] = 4
                    tot[3] += board[r][c]
    return max(tot) - min(tot)


n = int(input())
board = [[]] + [[0] + list(map(int, input().split())) for _ in range(n)]
ans = 10000
for x in range(1, n + 1):
    for y in range(1, n + 1):
        for d1 in range(1, n + 1):
            for d2 in range(1, n + 1):
                try:
                    ans = min(ans, sol(x, y, d1, d2))
                except IndexError:
                    continue
print(ans)
