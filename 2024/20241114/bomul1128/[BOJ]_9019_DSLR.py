# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/9019
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=9019&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
def d(k: int) -> int:
    return k * 2 % 10000


def s(k: int) -> int:
    return (k - 1) % 10000


def l(k: int) -> int:
    return (k % 1000) * 10 + k // 1000


def r(k: int) -> int:
    return (k % 10) * 1000 + k // 10


def find(init, fin):
    mapper = {
        "D": d,
        "S": s,
        "L": l,
        "R": r
    }
    visited = [False] * 10000
    queue = [(init, "")]
    visited[init] = True
    for k, v in queue:
        for op, f in mapper.items():
            nk = f(k)
            if not visited[nk]:
                visited[nk] = True
                queue.append((nk, v + op))
                if nk == fin:
                    return v + op


for _ in range(int(input())):
    a, b = map(int, input().split())
    print(find(a, b))
