# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/16197
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=16197&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
def in_board(x, y):
    return 0 <= x < n and 0 <= y < m

n, m = map(int, input().split())
board = [input() for _ in range(n)]
c = []
for i in range(n):
    for j in range(m):
        if board[i][j] == 'o':
            c.append((i, j))
ans = -1
dx = [0, 0, 1, -1]
dy = [1, -1, 0, 0]
q = [c[0] + c[1]]
for t in range(1, 11):
    nq = set()
    fall = False
    for d in range(4):
        for x1, y1, x2, y2 in q:
            nx1 = x1 + dx[d]
            ny1 = y1 + dy[d]
            nx2 = x2 + dx[d]
            ny2 = y2 + dy[d]
            if in_board(nx1, ny1) and board[nx1][ny1] == '#':
                nx1, ny1 = x1, y1
            if in_board(nx2, ny2) and board[nx2][ny2] == '#':
                nx2, ny2 = x2, y2
            fall |= in_board(nx1, ny1) ^ in_board(nx2, ny2)
            if not in_board(nx1, ny1) or not in_board(nx2, ny2):
                continue
            nq.add((nx1, ny1, nx2, ny2))
    if fall:
        ans = t
        break
    q = nq
print(ans)
