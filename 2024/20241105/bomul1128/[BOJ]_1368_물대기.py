# Generated by make_my_study_record.py
# BOJ LINK : https://www.acmicpc.net/problem/1368
# My submission : https://www.acmicpc.net/status?option-status-pid=on&problem_id=1368&user_id=bomul1128&language_id=-1&result_id=-1&from_problem=1
from sys import stdin
from heapq import *

input = stdin.readline


def find(x):
    if parent[x] == x:
        return x
    parent[x] = find(parent[x])
    return parent[x]


n = int(input())
cost = [int(input()) for _ in range(n)]
board = [list(map(int, input().split())) for _ in range(n)]
parent = list(range(n + 1))
edges = []
for i, c in enumerate(cost):
    edges.append((c, i, n))
for i in range(n):
    for j in range(i):
        edges.append((board[i][j], i, j))
heapify(edges)
ans = 0
connect = 0
while connect < n:
    c, a, b = heappop(edges)
    pa, pb = find(a), find(b)
    if pa != pb:
        ans += c
        connect += 1
        parent[pa] = pb
print(ans)
